#pragma once

typedef enum ETextureType
{
	TextureType_NONE = 0,
	TextureType_DIFFUSE = 1,
	TextureType_SPECULAR = 2,
	TextureType_AMBIENT = 3,
	TextureType_EMISSIVE = 4,
	TextureType_HEIGHT = 5,
	TextureType_NORMALS = 6,
	TextureType_SHINNESS = 7,
	TextureType_OPACITY = 8,
	TextureType_DISPLACEMENT = 9,
	TextureType_LIGHTMAP = 10,
	TextureType_REFLECTION = 11,
	TextureType_BASE_COLOR = 12,
	TextureType_NORMAL_CAMERA = 13,
	TextureType_EIMISSION_COLOR = 14,
	TextureType_METALNESS = 15,
	TextureType_DIFFUSE_ROUGHTNESS = 16,
	TextureType_AMBIENT_OCCLUSION = 17,
	TextureType_UNKNOWN = 18
}TEXTYPE;

typedef enum EMatrixRow
{
	MATROW_RIGHT, MATROW_UP, MATROW_LOOK, MATROW_POS, MATROW_END
}MATRIXROW;

typedef enum EGamePadKey
{
	 GPK_X, GPK_A, GPK_Y, GPK_B,

	 GPK_BACK, GPK_DPAD_DOWN, GPK_DPAD_UP, GPK_DPAD_LEFT, GPK_DPAD_RIGHT,

	 GPK_LEFT_SHOULDER, GPK_LEFT_STICK, GPK_LEFT_STICKDOWN,

	 GPK_LEFT_STICKUP, GPK_LEFT_STICKRIGHT, GPK_LEFT_STICKLEFT, GPK_LEFT_TRIGGER,

	 GPK_RIGHT_SHOULDER, GPK_RIGHT_STICK, GPK_RIGHT_STICKDOWN,

	 GPK_RIGHT_STICKUP, GPK_RIGHT_STICKRIGHT, GPK_RIGHT_STICKLEFT, GPK_RIGHT_TRIGGER,

	 GPK_MENU, GPK_START, GPK_VIEW,

	GPK_END
}GAMEPADKEYS;

typedef enum class EInputCon_Type
{
	KEYBOAR_MOUSE, GAMEPAD, TYPE_END
}INPUTCON_TYPE;